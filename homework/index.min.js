"use strict";const LOGIN_FUNCTION_URL="https://mhkrsiirkcj4rfksqbmlxlbuxm0almuy.lambda-url.us-east-1.on.aws/",SYNC_FUNCTION_URL="https://uwqsd7ek74vjvl5vdylmq2ruuu0dsdsl.lambda-url.us-east-1.on.aws/",RETRY_TIMEOUT=1e4;class HTTPError extends Error{constructor(status){super(),this.status=status}}function getCompletedExercises(){return JSON.parse(sessionStorage.getItem("completed")??"[]")}function updateCompletedMarkers(){getCompletedExercises().forEach(exerciseId=>{document.querySelector("#"+exerciseId)?.classList.remove("todo"),document.querySelector("#"+exerciseId)?.classList.add("done")})}function setCompletedExercises(exerciseIds){sessionStorage.setItem("completed",JSON.stringify(exerciseIds)),updateCompletedMarkers()}function displayNotification(text){document.querySelector(".toast-body").textContent=text,new bootstrap.Toast(document.querySelector(".toast"),{delay:3e3}).show()}function displayLoginStatus(){document.querySelector("#login-status").textContent="Logged in as "+window.localStorage.getItem("name")}function logout(){localStorage.removeItem("token"),sessionStorage.removeItem("completed"),window.location.reload()}async function sendLoginRequest(email,pin){email=await fetch(LOGIN_FUNCTION_URL,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:email,pin:pin})});if(email.ok)return email.json();throw new HTTPError(email.status)}async function sendSyncRequest(token,completed){token=await fetch(SYNC_FUNCTION_URL,{method:"POST",headers:{Authorization:"Bearer "+token,"Content-Type":"application/json"},body:JSON.stringify({completed:completed})});if(token.ok)return token.json();throw 401!==token.status&&403!==token.status||logout(),new HTTPError(token.status)}async function syncCompletedExercises(){var completed=getCompletedExercises(),token=localStorage.getItem("token"),confirmBeforeClose=event=>event.preventDefault();window.addEventListener("beforeunload",confirmBeforeClose);let data;try{data=await sendSyncRequest(token,completed)}catch(err){return displayNotification("Error: Failed to synchronise exercise status."),void setTimeout(syncCompletedExercises,RETRY_TIMEOUT)}finally{window.removeEventListener("beforeunload",confirmBeforeClose)}setCompletedExercises(data.completed),displayNotification(`
    Completed: ${data.completed.length}
    exercise${1<data.completed.length?"s":""}
    (${parseInt(100*data.progress,10)}%)
  `)}function saveCompletedExercise(exerciseId){var completed=getCompletedExercises();completed.includes(exerciseId)||(completed.push(exerciseId),setCompletedExercises(completed),syncCompletedExercises())}function setValidationError(input,message){message?input.classList.add("is-invalid"):input.classList.remove("is-invalid"),input.parentElement.querySelector(".invalid-feedback").textContent=message}function setServerError(message){var errorField=document.querySelector("#login-email-error");errorField.textContent=message,errorField.style.display="inline"}async function login(){var emailInput=document.querySelector("#login-email"),pinInput=document.querySelector("#login-pin");if(setValidationError(emailInput,""),setValidationError(pinInput,""),!emailInput.checkValidity())return setValidationError(emailInput,emailInput.validationMessage),!1;if(!pinInput.checkValidity())return setValidationError(pinInput,pinInput.validationMessage),!1;var spinner=document.querySelector("#login-spinner");spinner.hidden=!1;let data;try{data=await sendLoginRequest(emailInput.value,pinInput.value)}catch(err){return err instanceof HTTPError&&401===err.status?setValidationError(pinInput,"Incorrect PIN."):err instanceof HTTPError&&403===err.status?setServerError("Unfortunately your access to the site has expired."):err instanceof HTTPError&&404===err.status?setValidationError(emailInput,"Unknown email address.",!0):setServerError(emailInput,"An unexpected error occurred on the server."),!1}finally{spinner.hidden=!0}return localStorage.setItem("token",data.token),localStorage.setItem("name",data.name),document.querySelector("#login-form").reset(),displayLoginStatus(),syncCompletedExercises(),!0}window.addEventListener("DOMContentLoaded",()=>{document.querySelector("main").hidden=!1;const loginModal=new bootstrap.Modal(document.querySelector("#login-modal"));localStorage.getItem("token")?(displayLoginStatus(),(sessionStorage.getItem("completed")?updateCompletedMarkers:syncCompletedExercises)()):loginModal.show(),document.querySelector("#login-pin").addEventListener("keypress",event=>{event.code.startsWith("Digit")||event.preventDefault()}),document.querySelector("#login-form").addEventListener("submit",async event=>{event.preventDefault(),await login()&&loginModal.hide()})});